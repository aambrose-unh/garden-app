"""feat(gardenbed): add shape and shape_params columns, deprecate length/width

Revision ID: e7bb94fa1f85
Revises: 2ff1c4bf4174
Create Date: 2025-04-26 06:19:19.894941

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e7bb94fa1f85'
down_revision = '2ff1c4bf4174'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('garden_bed', schema=None) as batch_op:
        batch_op.add_column(sa.Column('shape', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('shape_params', sa.JSON(), nullable=True))
        batch_op.alter_column('length',
               existing_type=sa.FLOAT(),
               nullable=True)
        batch_op.alter_column('width',
               existing_type=sa.FLOAT(),
               nullable=True)

    # Backfill existing rows with default values (rectangle)
    op.execute("UPDATE garden_bed SET shape = 'rectangle' WHERE shape IS NULL")
    # Use SQLite JSON syntax for shape_params
    op.execute("UPDATE garden_bed SET shape_params = json_object('width', width, 'height', length) WHERE shape_params IS NULL")

    # Optionally, make columns NOT NULL after backfill
    with op.batch_alter_table('garden_bed', schema=None) as batch_op:
        batch_op.alter_column('shape', existing_type=sa.String(length=20), nullable=False)
        batch_op.alter_column('shape_params', existing_type=sa.JSON(), nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('garden_bed', schema=None) as batch_op:
        batch_op.alter_column('width',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('length',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.drop_column('shape_params')
        batch_op.drop_column('shape')

    # ### end Alembic commands ###
